{
  "_args": [
    [
      {
        "raw": "nsfw@https://registry.npmjs.org/nsfw/-/nsfw-1.0.16.tgz",
        "scope": null,
        "escapedName": "nsfw",
        "name": "nsfw",
        "rawSpec": "https://registry.npmjs.org/nsfw/-/nsfw-1.0.16.tgz",
        "spec": "https://registry.npmjs.org/nsfw/-/nsfw-1.0.16.tgz",
        "type": "remote"
      },
      "/vso/work/1/s"
    ]
  ],
  "_from": "nsfw@1.0.16",
  "_id": "nsfw@1.0.16",
  "_inCache": true,
  "_location": "/nsfw",
  "_phantomChildren": {},
  "_requested": {
    "raw": "nsfw@https://registry.npmjs.org/nsfw/-/nsfw-1.0.16.tgz",
    "scope": null,
    "escapedName": "nsfw",
    "name": "nsfw",
    "rawSpec": "https://registry.npmjs.org/nsfw/-/nsfw-1.0.16.tgz",
    "spec": "https://registry.npmjs.org/nsfw/-/nsfw-1.0.16.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/nsfw/-/nsfw-1.0.16.tgz",
  "_shasum": "78ba3e7f513b53d160c221b9018e0baf108614cc",
  "_shrinkwrap": null,
  "_spec": "nsfw@https://registry.npmjs.org/nsfw/-/nsfw-1.0.16.tgz",
  "_where": "/vso/work/1/s",
  "author": {
    "name": "Axosoft, LLC"
  },
  "bugs": {
    "url": "https://github.com/axosoft/node-simple-file-watcher/issues"
  },
  "dependencies": {
    "fs-extra": "^0.26.5",
    "lodash.isinteger": "^4.0.4",
    "lodash.isundefined": "^3.0.1",
    "nan": "^2.0.0",
    "promisify-node": "^0.3.0"
  },
  "description": "A simple file watcher for Node",
  "devDependencies": {
    "babel-cli": "^6.5.1",
    "babel-preset-es2015": "^6.5.0",
    "eslint": "^2.2.0",
    "jasmine-node": "^2.0.0"
  },
  "files": [
    "lib",
    "src",
    "includes",
    "openpa",
    "binding.gyp"
  ],
  "gypfile": true,
  "homepage": "https://github.com/axosoft/node-simple-file-watcher",
  "keywords": [
    "FileWatcher",
    "files",
    "watch",
    "filewatch",
    "file",
    "inotify",
    "fsevents"
  ],
  "license": "MIT",
  "main": "lib/src/index.js",
  "name": "nsfw",
  "optionalDependencies": {},
  "readme": "# node-sentinel-file-watcher\n<table>\n  <thead>\n    <tr>\n      <th>Linux</th>\n      <th>OS X</th>\n      <th>Windows</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td colspan=\"2\" align=\"center\">\n      <a href=\"https://travis-ci.org/Axosoft/nsfw\"><img src=\"https://travis-ci.org/Axosoft/nsfw.svg?branch=master\"></a>\n      </td>\n      <td align=\"center\">\n        <a href=\"https://ci.appveyor.com/project/implausible/node-simple-file-watcher\"><img src=\"https://ci.appveyor.com/api/projects/status/79ejlq7e60kjmbl6?svg=true\"></a>\n      </td>\n    </tr>\n  </tbody>\n</table>\nA simple file watcher library for node.\n\n## Why NSFW?\nNSFW is a native abstraction for Linux, Windows, and OSX file watching services which tries to keep a consistent interface and feature set across operating systems. NSFW offers recursive file watching into deep file systems all at no additional cost to the Javascript layer. In Linux, NSFW recursively builds an inotify watch tree natively, which collects events concurrently to the javascript thread. In OSX, NSFW utilizes the FSEventsService, which recursively watches for file system changes in a specified directory. In Windows, NSFW implements a server around the ReadDirectoryChangesW method.\n\nWhen NSFW has events and is not being throttled, it will group those events in the order that they occurred and report them to the Javascript layer in a single callback. This is an improvement over services that utilize Node FS.watch, which uses a callback for every file event that is triggered. Every callback FS.watch makes to the event queue is a big bonus to NSFW's performance when watching large file system operations, because NSFW will only make 1 callback with many events within a specified throttle period.\n\nSo why NSFW? Because it has a consistent and minimal footprint in the Javascript layer, manages recursive watching for you, and is super easy to use.\n\n## Usage\n\n```js\nvar nsfw = require('nsfw');\n\nvar watcher1;\nreturn nsfw(\n  'dir1',\n  function(events) {\n    // handle events\n  })\n  .then(function(watcher) {\n    watcher1 = watcher;\n    return watcher.start();\n  })\n  .then(function() {\n    // we are now watching dir1 for events!\n    \n    // To stop watching\n    watcher1.stop()\n  });\n\n// With options\nvar watcher2;\nreturn nsfw(\n  'dir2',\n  function(events) {\n  // handles other events\n  },\n  {\n    debounceMS: 250,\n    errorCallback(errors) {\n      //handle errors\n    }\n  })\n  .then(function(watcher) {\n    watcher2 = watcher;\n    return watcher.start();\n  })\n  .then(function() {\n    // we are now watching dir2 for events!\n  })\n  .then(function() {\n    // To stop watching\n    watcher2.stop();\n  })\n```\n\n## Callback Argument\n\nAn array of events as they have happened in a directory, it's children, or to a file.\n```js\n[\n  {\n    \"action\": 2, // nsfw.actions.MODIFIED\n    \"directory\": \"/home/nsfw/watchDir\",\n    \"file\": \"file1.ext\"\n  },\n  {\n    \"action\": 0, // nsfw.actions.CREATED\n    \"directory\": \"/home/nsfw/watchDir\",\n    \"file\": \"folder\"\n  },\n  {\n    \"action\": 1, // nsfw.actions.DELETED\n    \"directory\": \"home/nsfw/watchDir/testFolder\",\n    \"file\": \"test.ext\"\n  },\n  {\n    \"action\": 3, // nsfw.actions.RENAMED\n    \"directory\": \"home/nsfw/watchDir\",\n    \"oldFile\": \"oldname.ext\",\n    \"newFile\": \"newname.ext\"\n  }\n]\n```\n\nEvent are enumerated by the nsfw.actions enumeration\n```js\nnsfw.actions = {\n  CREATED: 0,\n  DELETED: 1,\n  MODIFIED: 2,\n  RENAMED: 3\n};\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/axosoft/node-simple-file-watcher.git"
  },
  "scripts": {
    "compile": "babel --sourceMaps --presets es2015 -d ./lib/spec ./js/spec && babel --sourceMaps --presets es2015 -d ./lib/src ./js/src",
    "debug-test": "npm run eslint && npm run compile && node-debug --debug-brk jasmine-node lib/spec",
    "eslint": "eslint js/src js/spec",
    "install": "node-gyp rebuild",
    "prepublish": "babel --presets es2015 -d ./lib/src ./js/src",
    "test": "npm run eslint && npm run compile && jasmine-node lib/spec --verbose"
  },
  "version": "1.0.16"
}
